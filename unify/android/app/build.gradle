def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.unifyproxy.unify"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // ndk 'x86', 'x86_64', 'armeabi-v7a',
        externalNativeBuild {
//            ndk {
//                abiFilters  'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
//            }

            cmake {
                abiFilters  'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
                targets "tun2socks", "libancillary"
            }
        }
    }

//    flavorDimensions 'app'
//
//    productFlavors {
//        mainflavor{
//            externalNativeBuild {
//                ndk {
//                    abiFilters  'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
//                }
//
//                cmake {
//                    targets "tun2socks"
//                }
//            }
//        }
//    }

    externalNativeBuild {
//        ndkBuild {
//            path 'src/main/jni/Android.mk'
//        }
        cmake {
            path "src/main/jni/CMakeLists.txt"
            version '3.10.2'
        }
    }

    sourceSets.main {
        jni.srcDir 'src/main/jni'
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '29.0.2'


}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
